%% Load Data

scalar_sub = load("C:\Users\min\Desktop\여름연구\OpticalFlow\ground_truth\data\scalar1_with_sub_area.mat").sst;

%% Input Parameters

offset = 5;

flow_velocity = 0.5;
flow_direction_deg = 0;

SPATIAL_RESOLUTION_RATIO = 2000; % 2000 meters : 1 pixel
TIME_RESOLUTION_RATIO = 600; % 600 seconds : 1 snapshot


%% Set Parameters

flow_direction_rad = deg2rad(flow_direction_deg);
u= flow_velocity * cos(flow_direction_rad); % meter/sec
v=  flow_velocity * sin(flow_direction_rad); % meter/sec

dt = TIME_RESOLUTION_RATIO; % second

dx=u*dt;
dy=v*dt;

%% Calculate Vector Field

u_field = u * ones(size_of_scalar); % x 방향 속도장
v_field = v * ones(size_of_scalar); % v 방향 속도장

save('C:\Users\민경윤\Desktop\여름연구\OpticalFlow\new\ground_truth\data\GT_vector_field.mat', 'ux', 'uy');

%% Calculate Scalar2

[rows, cols] = size(scalar_sub);

[X, Y] = meshgrid(1:cols, 1:rows);

ORIGINAL_GRID_X = X * SPATIAL_RESOLUTION_RATIO;
ORIGINAL_GRID_Y = Y * SPATIAL_RESOLUTION_RATIO;

SHIFTED_GRID_X = ORIGINAL_GRID_X + dx;
SHIFTED_GRID_Y = ORIGINAL_GRID_Y + dy;

scalar_sub_interp = griddata(SHIFTED_GRID_X, SHIFTED_GRID_Y, scalar_sub, ORIGINAL_GRID_X, ORIGINAL_GRID_Y, 'v4');

% Remove Sub Area
scalar2 = scalar_sub_interp(1+offset:cols-offset, 1+offset:rows-offset);

% Save Scalar2
data1 = struct('sst', scalar2);
save("C:\Users\min\Desktop\여름연구\OpticalFlow\ground_truth\data\scalar2.mat",'-struct', 'data1');